[project]
name = "python_template"
version = "1.0.0"
description = "A python package template"
authors = [{name = "Austin Gregg-Smith", email = "blooop@gmail.com"}]
requires-python = ">=3.10"
readme = "README.md"
dependencies = []

[project.urls]
Source = "https://github.com/blooop/python_template"
Home = "https://github.com/blooop/python_template"

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64"]

[tool.pixi.dependencies]

[tool.pixi.pypi-dependencies]
python_template = { path = ".", editable = true }

[project.optional-dependencies]
test = [
  "black",
  "pylint",
  "pytest-cov",
  "pytest",
  "hypothesis",
  "ruff",
  "coverage",
]

[tool.pixi.tasks]
pr = "pixi install; git commit -a -m'update pixi.lock';git push"

[tool.pixi.feature.test.tasks]
fmt = "black ."
lint = "ruff check . --fix ; pylint $(git ls-files '*.py')"
test = "pytest"
coverage = "run -m pytest"

[tool.setuptools.packages.find]
include= ["python_template"]

# Environments
[tool.pixi.environments]
default = { solve-group = "default" }
test = { features = ["test"], solve-group = "default" }

[tool.pylint]
extension-pkg-whitelist = ["numpy"]
jobs = 16                           #detect number of cores

[tool.pylint.'MESSAGES CONTROL']
disable = "C,logging-fstring-interpolation,line-too-long,fixme,broad-exception-caught,missing-module-docstring,too-many-instance-attributes,too-few-public-methods,too-many-arguments,too-many-locals,too-many-branches,too-many-statements,use-dict-literal,cyclic-import,duplicate-code,too-many-public-methods"
enable = "no-else-return,consider-using-in"